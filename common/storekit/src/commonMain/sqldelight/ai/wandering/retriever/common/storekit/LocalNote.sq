CREATE TABLE localNote(
    id TEXT NOT NULL PRIMARY KEY,
    userId TEXT NOT NULL,
    content TEXT,
    is_read INTEGER AS Boolean NOT NULL,
    FOREIGN KEY (userId) REFERENCES localUser (id)
);

getAll:
SELECT *
FROM localNote;

getById:
SELECT *
FROM localNote
WHERE id = ?;

upsert:
INSERT OR REPLACE INTO localNote
VALUES ?;

clearById:
DELETE
FROM localNote
WHERE id = ?;

clearAll:
DELETE FROM localNote;

getByTag:
SELECT *
FROM localNote
LEFT JOIN noteTag
ON localNote.id == noteTag.noteId
LEFT JOIN localTag
ON noteTag.tagId == localTag.id
WHERE localTag.name = ?;

getByMention:
SELECT *
FROM localNote
LEFT JOIN noteMention
ON localNote.id == noteMention.noteId
WHERE noteMention.userId = ? AND noteMention.otherUserId = ?;

getByIdAndPopulateAll:
SELECT localNote.id, localNote.content, localNote.is_read, author.id AS "userId", author.name AS "userName", author.username AS "userUsername", author.email AS "userEmail", author.avatarUrl AS "userAvatarUrl" ,otherUser.id AS "otherUserId", otherUser.name AS "otherUserName", otherUser.email AS "otherUserEmail", otherUser.avatarUrl AS "otherUserAvatarUrl", otherUser.username AS "otherUserUsername", localTag.name AS "tagName", localTag.id AS "tagId"
FROM localNote
LEFT JOIN noteTag
ON localNote.id == noteTag.noteId
LEFT JOIN localTag
ON noteTag.tagId == localTag.id
LEFT JOIN noteMention
ON localNote.id == noteMention.noteId
LEFT JOIN localUser AS "author"
ON localNote.userId == author.id
LEFT JOIN localUser AS "otherUser"
ON noteMention.otherUserId == otherUser.id
WHERE localNote.id = ?;




